# 负载均衡
upstream rsserver {
    server rsnodeapp:8360 weight=1; # localhost需在 nginx容器的extra_hosts配置
}
server {
    #比起默认的80 使用了443 默认 是ssl方式  多出default之后的ssl
    listen 80; # http
    # listen 443 ssl; # https
    #default 可省略
    #开启  如果把ssl on；这行去掉，ssl写在443端口后面。这样http和https的链接都可以用
    # ssl on;
    ## ssl证书配置开始
    # 以下证书及密钥为自助生成
    # # 证书(公钥.发送到客户端的)
    # ssl_certificate  /home/nodeJs/server.crt;
    # # 私钥,
    # ssl_certificate_key  /home/nodeJs/server.key;
    # 以下证书及密钥由阿里云服务商生成
    #证书(公钥.发送到客户端的)
    # ssl_certificate  /usr/share/nginx/**.pem;
    #私钥,
    # ssl_certificate_key  /usr/share/nginx/**.key;
    # 额外参数
    # ssl_session_timeout 5m;
    # ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;  #使用此加密套件。
    # ssl_protocols TLSv1 TLSv1.1 TLSv1.2;   #使用该协议进行配置。
    # ssl_prefer_server_ciphers on; 
    ## ssl证书配置结束
    # 下面是绑定域名
    server_name localhost;
    # 资源地址
    root /usr/share/nginx/html/;
    # 服务端口

    location /api {#https #api-server
        proxy_http_version 1.1;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_set_header X-NginX-Proxy true;
        proxy_redirect off;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        # nginx内置变量 https://www.cnblogs.com/raichen/p/5121262.html
        proxy_pass http://rsserver$request_uri;
    }

    location ~ /static/ {
        etag         on;
        expires      max;
    }
}